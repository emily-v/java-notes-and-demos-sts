package com.revature.eval.java.core;


public class Playground {
	
	public static void main(String[] args) {
	
	String test = "+1233-233 2323";
	System.out.println(cleanPhoneNumber(test));
	
	}
	
	
	
	/**
	Your task is to clean up differently formatted telephone numbers by removing
	 * punctuation and the country code (1) if present.
	 * 
	 * For example, the inputs
	 * 
	 * +1 (613)-995-0253 613-995-0253 1 613 995 0253 613.995.0253 should all produce
	 * the output
	 * 
	 * 6139950253
	 * 
	 * Note: As this exercise only deals with telephone numbers used in
	 * NANP-countries, only 1 is considered a valid country code.
	 */
	public static String cleanPhoneNumber(String string) {
		String clean = "";
		if (string.charAt(0) != '2' || string.charAt(0) != '3') {
			string = string.substring(1); // remove 1 from beginning if present
		}
		for (int i = 0; i < string.length(); i++) {
			if (string.charAt(i) == '0' || string.charAt(i) == '1' || string.charAt(i) == '2' || string.charAt(i) == '3' || string.charAt(i) == '4' || string.charAt(i) == '5' || string.charAt(i) == '6'  || string.charAt(i) == '7' || string.charAt(i) == '8'|| string.charAt(i) == '9') {					
				clean = clean + string.charAt(i);
			}
		}
//		if(clean.length() != 10) {
//			clean = "enter valid number";
//		}
		
		return clean;
	}
	
//	public static int getScrabbleScore(String string) {
//		int score = 0;
//		int strLen = string.length();
//		for (int i = 0; i < strLen; i++) {
//			char character = string.toLowerCase().charAt(i);
//			int value = 0;
//			switch (character) {
//				case 'a': value = 1; break;
//				case 'z': value = 10; break;
//			}
//			score = score + value;
//		}
//		return (score);
//	}

}
